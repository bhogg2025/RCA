let n=null;async function l(){if(n)return n;try{return n={apiBase:"/api",apiVersion:(await(await fetch("/api/meta")).json()).apiVersion??"unknown"},console.log("üîß Runtime config loaded:",n),console.log("üåê Admin-settings debug: Config system active"),n}catch(o){return console.error("‚ùå Failed to load runtime config:",o),n={apiBase:"/api",apiVersion:"unknown"},n}}async function r(o,e){const{apiBase:s}=await l(),i=o.startsWith("/")?o:`/${o}`,a=`${s}${i}`;console.log(`üåê API call: ${(e==null?void 0:e.method)||"GET"} ${a}`);const t=await fetch(a,{cache:"no-store",...e});if(!t.ok){const c=await t.text();throw new Error(`API Error ${t.status}: ${c}`)}return t}async function u(o,e){return r(o,{method:"POST",headers:{"Content-Type":"application/json"},body:e?JSON.stringify(e):void 0})}async function p(o){return r(o,{method:"DELETE"})}export{r as api,p as apiDelete,u as apiPost};
